import { get } from 'svelte/store';
import { storeForms } from './stores';
import { validate } from './validation';
export async function getFormByName(form_name) {
    const forms = await get(storeForms);
    const form = forms.find((form) => form.form_name === form_name);
    return form ?? null;
}
export async function preprocessField(field, fields, values) {
    const fnc = field.preprocess;
    field = await fnc?.call(null, field, fields, values);
    return field;
}
export async function getValues(form_name) {
    const forms = await get(storeForms);
    const form = forms.find((form) => form.form_name === form_name);
    return form ? form?.values : {};
}
export async function preprocess_and_validate_field(form, field, values) {
    // 1.preprocess
    if (field.preprocess) {
        field = await preprocessField(field, form.fields, values);
        values[`${field.name}`] = field.value ?? null;
    }
    // 2.validation
    if (field.rules) {
        field = await validate(field);
    }
    return field;
}
