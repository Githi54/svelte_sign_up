import { writable } from 'svelte/store';
export const formsStore = writable([]);
function createForms() {
    const { subscribe, set, update } = writable([]);
    return {
        subscribe,
        // add new form
        save: (newForm) => update((forms) => {
            const form = forms.find((form) => form.form_name === newForm.form_name);
            if (!form) {
                forms = [...forms, newForm];
            }
            else {
                forms = forms.map((form) => form.form_name === newForm.form_name ? newForm : form);
            }
            return forms;
        }),
        // remove forms.
        reset: () => set([]),
        // remove values form by name
        resetValues: (form_name) => update((forms) => {
            forms.map((form) => {
                if (form.form_name === form_name) {
                    form.fields.map((field) => {
                        field.value = null;
                        form.values[field.name] = null;
                    });
                }
                return form;
            });
            return forms;
        }),
        // update value field
        updateFieldValue: (form_name, field_name, field_value) => update((forms) => {
            const _forms = forms.map((form) => {
                if (form.form_name === form_name) {
                    form.fields.map((field) => {
                        if (field.name === field_name) {
                            field.value = field_value;
                            form.values[field_name] = field_value;
                            form.values['touched'] = field_name;
                        }
                        return field;
                    });
                }
                return form;
            });
            return _forms;
        })
    };
}
export const storeForms = createForms();
